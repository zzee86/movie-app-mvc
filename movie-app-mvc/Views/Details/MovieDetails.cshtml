@model MovieInfo.Result

@{
    ViewData["Title"] = "Details Page";
}


<head>
    <link rel="stylesheet" href="~/css/site.css" />
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

</head>

<body>
    <script src="~/browserLink" type="text/javascript"></script>
    <script src="/_framework/aspnetcore-browser-refresh.js"></script>

    @Html.Partial("_NavBar")

    <div class="hero-section">
        <div class="detail-card">
            <div class="detail-card-image">
                <img src="@Model.poster_path_url" alt="Movie Poster" />
            </div>
        </div>
        <div class="detail-information">

            <div class="detail-title-holder">
                @if (string.IsNullOrEmpty(Model.title))
                {
                    @if (ViewBag.Media_Key == "tv" && !string.IsNullOrEmpty(ViewBag.ReleaseDate))
                    {
                        <h2 class="detail-title">@ViewBag.Backup_Title @($"({ViewBag.InitialReleaseDate} - {ViewBag.FinalReleaseDate})")</h2>
                    }

                    else if (ViewBag.Media_Key == "movie" && !string.IsNullOrEmpty(ViewBag.ReleaseDate))
                    {
                        <h2 class="detail-title">@ViewBag.Backup_Title @($"({ViewBag.ReleaseDate})")</h2>
                    }
                }

                else
                {
                    <h2 class="detail-title ">@ViewBag.Backup_Title (@ViewBag.ReleaseDate)</h2>
                }
            </div>


            <div class="detail-extra-information">
                <div class="detail-info-row">
                    @if (!string.IsNullOrEmpty(ViewBag.Media_PG_Rating))
                    {
                        <div class="pg-rating-container">
                            <h3>@ViewBag.Media_PG_Rating</h3>
                        </div>
                    }
                    <h3 class="detail-text">@ViewBag.FullReleaseDate</h3>
                    <div class="circle-separator"></div>

                    <h3 class="detail-text">@ViewBag.Runtime</h3>
                    <div class="circle-separator"></div>
                </div>
                <div class="detail-info-row">
                    <div class="genre-list">
                        @for (int i = 0; i < ViewBag.Genres.Count; i++)
                        {
                            <h3 class="genre-item">@ViewBag.Genres[i]</h3>
                            @if (i != ViewBag.Genres.Count - 1)
                            {
                                <span class="comma"></span>
                            }
                        }
                    </div>
                </div>
            </div>

            <div class="detail-average-rating-container">
                <div class="detail-star-container">
                    <img src="@Url.Content("~/Images/star.png")" class="detail-star" alt="Star" />
                </div>
                <div class="detail-rating">
                    <h3>@ViewBag.AverageRating</h3>
                </div>
            </div>

            <h3 class="media-overview">@ViewBag.Media_Overview</h3>

            @if (ViewBag.Providers != null && ViewBag.Providers.Count > 0)
            {
                <div class="providers-section">
                    <h3>Top Providers:</h3>
                    <div class="providers-container">
                        <ul>
                            @foreach (var provider in ViewBag.Providers)
                            {
                                <li>
                                    <img src="@provider.logo_path_url" alt="Provider Poster" />
                                </li>
                            }
                        </ul>
                    </div>
                </div>
            }


        </div>

        <div class="tmp-container">
            <div class="dominant" style="background-color: @ViewBag.DominantColorTransparency;">
                <div class="dark-tint"></div>
            </div>

            <div class="background-image-holder">
                <img src="@Model.backdrop_path_url" class="media_background_image" alt="background-image" />
            </div>
        </div>

    </div>


    @if (@ViewBag.Media_Key == "tv")
    {
        <h3>@ViewBag.SeasonNumber</h3>
        <h3>@ViewBag.SeasonEpisodeCount Episodes</h3>
        <h3>@ViewBag.SeasonAirDate</h3>
        <h3>@ViewBag.SeasonRuntime</h3>
    }

    <h4>Poster Url: @ViewBag.PosterURL</h4>


    <h4>DominantColorTransparency: @ViewBag.DominantColorTransparency</h4>







    <div class="cast-container">
        <div class="card-cast-container">
            @foreach (var cast in ViewBag.CastList)
            {
                if (!string.IsNullOrEmpty(@cast.profile_path))
                {
                    <div class="card card-cast">
                        <div class="card-image card-cast-image">
                            <img src="@cast.profile_path_url" alt="Movie Poster" />
                        </div>
                        <div class="card-cast-content">
                            <div class="cast-titleHolder">
                                <h2 class="cast-info">@cast.name</h2>
                            </div>

                            <div class="cast-character">
                                <h2>@cast.character</h2>
                            </div>
                        </div>

                    </div>
                }
            }
        </div>
    </div>


    @if (ViewBag.ResultList != null && ViewBag.ResultList.Count > 0)
    {
        <div class="section-container trending-section">

            <div class="trending-movies">
                <h3 class="trending-text">
                    Recommendations
                </h3>
            </div>
            <div class="movies-container">
                <div class="card-container else">
                    @foreach (var movie in ViewBag.ResultList)
                    {
                        <div class="card">

                            <a href="@Url.Action("MovieDetails", "Details", new { title = movie.title, id = movie.id})">
                                <div class="card-image">
                                    <div class="overlay">
                                        <!-- Overlay content -->
                                        <div class="image-container">
                                            <img src="@Url.Content("~/Images/star.png")" class="star" alt="Star" />
                                        </div>
                                        @*<h2>@Math.Round(movie.vote_average, 1)</h2>*@
                                        <h2>@Math.Round(movie.vote_average, 1)</h2>
                                    </div>
                                    <img src="@movie.poster_path_url" alt="Movie Poster" />
                                </div>
                            </a>
                            <div class="card-content">
                                <a href="@Url.Action("MovieDetails", "Details", new { title = movie.title, id = movie.id })">

                                    <div class="titleHolder">
                                        <h2>@movie.title</h2>
                                    </div>
                                </a>
                                <div class="button-container">
                                    @if (User.Identity.IsAuthenticated)
                                    {
                                        @if (movie.IsSaved)
                                        {
                                            <form method="post" action="@Url.Action("RemoveMovie", "Home", new { searchQuery = ViewBag.SearchQuery, page = ViewBag.CurrentPage })">
                                                <input type="hidden" name="title" value="@movie.title" />
                                                <button type="submit" class="@(movie.IsSaved ? "saved" : "")">Remove</button>
                                            </form>
                                        }
                                        else
                                        {
                                            <form method="post" action="@Url.Action("SaveMovie", "Home", new { searchQuery = ViewBag.SearchQuery, page = ViewBag.CurrentPage })">
                                                <input type="hidden" name="title" value="@movie.title" />
                                                <input type="hidden" name="overview" value="@movie.overview" />
                                                <input type="hidden" name="poster" value="@movie.poster_path_url" />
                                                <input type="hidden" name="rating" value="@Math.Round(movie.vote_average, 1)" />
                                                <input type="hidden" name="movieid" value="@movie.id" />
                                                <button type="submit">Save</button>
                                            </form>
                                        }
                                    }
                                    else
                                    {
                                        @*<button type="submit" class="@(movie.IsSaved ? "saved" : "")">User must be logged in</button>*@
                                        <button type="button" class="@(movie.IsSaved ? "saved" : "")" onclick="showSignInPopup()">Save</button>

                                    }
                                </div>
                            </div>

                        </div>
                    }
                </div>
            </div>
        </div>
    }


    <div class="moviesDetailsContainer">



        <h1>@Model.title</h1>
        <h1>@Model.overview</h1>


        <h1>Show ID: @ViewBag.movieID</h1>
        <h1>Show Key: @ViewBag.MovieKey</h1>

        @if (@ViewBag.Media_Key == "tv")
        {
            <h1>Seasons: @ViewBag.SeasonNumber</h1>

            <h1>Current Season Episode Count: @ViewBag.SeasonEpisodeCount</h1>

            <h1>Total Episode Count: @ViewBag.episodeTotalCount</h1>

            <h1>Average Runtime: @ViewBag.EpisodeRuntime minutes</h1>
        }

        <button id="show-video-button" onclick="showVideo('@ViewBag.MovieKey')">Trailer</button>

        <!-- Overlay video element -->
        <div id="overlay-video">
            <div class="close-header">
                <button id="close-button" onclick="closeVideo()">Close</button>
            </div>
            <div id="video-container">
                <iframe id="video-iframe" width="100%" height="100%" frameborder="0" allowfullscreen autoplay></iframe>
            </div>
        </div>



        <div>
            <iframe src="https://www.youtube.com/embed/@ViewBag.MovieKey?autoplay=1" width="50%" height="50%" frameborder="0"></iframe>
        </div>

    </div>



</body>

<script src="https://cdnjs.cloudflare.com/ajax/libs/color-thief/2.3.0/color-thief.umd.js"></script>

<script src="~/js/site.js"></script>

@*<script>
         Previous js for trailer
            // Get the elements
            const showVideoButton = document.getElementById('show-video-button');
            const overlayVideo = document.getElementById('overlay-video');
            const closeVideoButton = document.getElementById('close-button');
            const videoIframe = document.getElementById('video-iframe');
            const movieKey = "@ViewBag.MovieKey";

            // Add click event listener to the show video button
            showVideoButton.addEventListener('click', function () {
                overlayVideo.style.display = 'flex';
                videoIframe.src = `https://www.youtube.com/embed/${movieKey}?autoplay=1`;
                closeVideoButton.style.display = 'block';
            });

            // Add click event listener to the close video button
            closeVideoButton.addEventListener('click', function () {
                overlayVideo.style.display = 'none';
                videoIframe.src = '';
                closeVideoButton.style.display = 'none';
            });
        }
    </script>*@